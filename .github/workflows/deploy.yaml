name: Deploy

on:
  push:
    branches:
      - master

env:
  DOCKER_REPOSITORY: dixneuf19
  HELM_REPOSITORY_NAME: dixneuf19
  HELM_REPOSITORY_URL: https://dixneuf19.github.io/helm-charts-repo/
  HELM_CHART_NAME: base-helm-chart
  TARGET_PLATFORMS: linux/amd64,linux/386,linux/arm64,linux/arm/v7
  HELM_RELEASE_NAME: whats-on-fip
  IMAGE_NAME: whatsonfip

jobs:
  build_and_release:
    runs-on: ubuntu-20.04
    steps:
      # Get the repository's code
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        id: buildx
        uses: crazy-max/ghaction-docker-buildx@v2
        with: # in production, fix the version of your dependencies
          buildx-version: latest
          skip-cache: false
          qemu-version: latest

      - name: Cache Docker layers
        uses: actions/cache@v2
        id: cache
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Available platforms
        run: echo ${{ steps.buildx.outputs.platforms }}

      # Build the images
      - name: Run Buildx
        run: |
          docker buildx build \
            --cache-from "type=local,src=/tmp/.buildx-cache" \
            --cache-to "type=local,dest=/tmp/.buildx-cache" \
            --platform  "$TARGET_PLATFORMS" \
            --output "type=image,push=false" \
            -t $DOCKER_REPOSITORY/$IMAGE_NAME:${GITHUB_SHA::7} \
            .

      - name: Login to DockerHub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "$DOCKER_REPOSITORY" --password-stdin

      # Build the images
      - name: Run Buildx
        run: |
          docker buildx build \
            --cache-from "type=local,src=/tmp/.buildx-cache" \
            --platform  "$TARGET_PLATFORMS" \
            --output "type=image,push=true" \
            -t $DOCKER_REPOSITORY/$IMAGE_NAME:${GITHUB_SHA::7} \
            .

      - name: Docker Check Manifest
        run: |
          docker run --rm mplatform/mquery $DOCKER_REPOSITORY/$IMAGE_NAME:${GITHUB_SHA::7}

      - name: Clear Docker credentials
        if: always()
        run: |
          rm -f ${HOME}/.docker/config.json

  deploy:
    runs-on: ubuntu-20.04
    needs:
      - build_and_release
    steps:
      # Get the repository's code
      - name: Checkout
        uses: actions/checkout@v2

      # set up kubectl
      - uses: azure/setup-kubectl@v1
        with:
          version: "v1.18.4" # default is latest stable

      # Configure kubectl.
      - name: Configure kubectl
        run: echo "${{ secrets.KUBE_CONFIG_B64 }}" | base64 --decode > kubeconfig.yml

      - uses: azure/setup-helm@v1
        with:
          version: "v3.2.0" # default is latest stable

      - name: Add helm repo
        run: |
          helm repo add $HELM_REPOSITORY_NAME $HELM_REPOSITORY_URL
          helm repo update

      # deploy helm release
      - name: Deploy Helm release
        run: |
          helm upgrade -i --wait --kubeconfig kubeconfig.yml \
            ${HELM_RELEASE_NAME} ${HELM_REPOSITORY_NAME}/${HELM_CHART_NAME} \
            -f values.yaml \
            --set image.repository=${DOCKER_REPOSITORY}/${IMAGE_NAME} --set image.tag=${GITHUB_SHA::7}
