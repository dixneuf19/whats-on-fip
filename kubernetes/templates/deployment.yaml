apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "chart.fullname" . }}
  labels:
{{ include "chart.labels" . | indent 4 }}
spec:
  replicas: {{ .Values.container.replicaCount }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "chart.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "chart.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      containers:
        - name: {{ include "chart.name" . }}
          image: "{{ .Values.container.image.repository }}:{{ .Values.container.image.tag }}"
          imagePullPolicy: {{ .Values.container.image.pullPolicy }}
          {{- if .Values.secrets }}
          env:
            {{- range $key, $value := .Values.secrets }}
            - name: {{ $key }}
              valueFrom:
                secretKeyRef:
                  name: {{ $value }}
                  key: {{ $key }}
            {{- end }}
          {{- end }}
          envFrom:
          - configMapRef:
              name: {{ include "chart.name" . }}
              optional: false
          ports:
            - name: http
              containerPort: {{ .Values.container.port }}
              protocol: TCP
          resources:
            limits:
              memory: {{ .Values.container.resources.limits.memory }}
              cpu: {{ .Values.container.resources.limits.cpu }}
            requests:
              memory: {{ .Values.container.resources.requests.memory }}
              cpu: {{ .Values.container.resources.requests.cpu }}
          readinessProbe:
            httpGet:
              path: {{ .Values.container.probe.path }}
              port: {{ .Values.container.port }}
          livenessProbe:
            httpGet:
              path: {{ .Values.container.probe.path }}
              port: {{ .Values.container.port }}
